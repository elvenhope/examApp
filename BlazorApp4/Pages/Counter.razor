@page "/counter"
@using BlazorApp4.Data

<PageTitle>Counter</PageTitle>

<div class="mb-5">
    <p>Enter New Box Name:</p>
    <input class="form-text" @bind="boxName" type="text"/>
    <button @onclick="addBox" class="button">Add</button>
</div>
<div class="mb-5">
    <p>Enter new item name:</p>
    <input class="form-text" @bind="itemName" type="text"/>
    <p>Enter new item img link:</p>
    <input class="form-text" @bind="itemImgLink" type="text"/>
    <p>select which box to add this to:</p>
    <select class="form-select" @bind="stringBoxId">
        @foreach (var box in boxes)
        {
            if (box.id == 1)
            {
                <option value="@box.id" selected>@box.name</option>   
            }
            else
            {
                <option value="@box.id">@box.name</option>   
            }
        }
    </select>
    <button @onclick="addItem" class="button">Add</button>
</div>

<div class="d-flex justify-content-around mb-5">
    <div class="d-flex flex-column">
        @foreach (var box in boxes)
        {
            <button class="button" @onclick="() => selectBox(box.id)">@box.name</button>
        }
    </div>
    
    <div class="d-flex flex-column">
        @if (selectedBox != null)
        {
            @foreach (var item in selectedBox.items)
            {
                <button class="button" @onclick="() => selectItem(item)">@item.name</button>
            }   
        }
    </div>
</div>

@if (selectedItem != null)
{
    <div class="customImg">
        <img src="@selectedItem.imgLink" alt="something"/>
    </div>
}

<style>
    .customImg {
        width: 500px;
        height: 500px;
    }
    
    .customImg img {
        width: 100%;
        height: auto;
        object-fit: contain;
    }
</style>

@code {
    private List<BoxModel> boxes = new();
    private List<Item> items = new();
    
    private string itemName = "";
    private string stringBoxId = "";
    private string itemImgLink = "";

    private string boxName = "";

    private BoxModel? selectedBox;
    private Item? selectedItem;

    private void addBox()
    {
        boxes.Add(new BoxModel(boxes.Count + 1, boxName, new List<Item>()));
        if (boxes.Count == 1)
        {
            stringBoxId = boxes.Count + "";
            selectedBox = boxes.ToArray()[0];
        }
    }

    private void addItem()
    {
        int boxId;
        if (int.TryParse(stringBoxId, out boxId))
        {
            Item newitem = new Item(itemName, boxId, itemImgLink);
            Console.WriteLine(boxId);
            if (boxes.Exists((box) => box.id == boxId))
            {
                items.Add(newitem);
                boxes.Find((box) => box.id == boxId).items.Add(newitem);   
            }   
        }
    }

    private void selectBox(int id)
    {
        selectedBox = boxes.Find((box) => box.id == id);
    }

    private void selectItem(Item item)
    {
        selectedItem = item;
    }
}